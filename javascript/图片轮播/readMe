图片轮换思路：

	1. 界面布局
		1.1 首先定义一个大盒子"play"，然后里面放两个小盒子"b_img"，"s_img".
			 <div class="play">
			 	<div id="b_img"></div>//这个放大图
			 	<div id="s_img"></div>//这个放视图
			 </div>
		1.2 大图盒子里面放6张图片，并采用绝对定位，并且层级都是0，这样6张图片就可以叠加覆盖，
			 只会显示最后一张，以后要显示 哪张，只需把相应的图片层级加大便可。其父级应采用相对定位。
		1.3 放两侧小按钮盒子(也采用绝对定位)，为了检测鼠标是在大图的左边还是右边，所以还添加辅助两个盒子，
			 分别占据大图的两侧，所以宽度是父级的50%，高度是100%。因为要隐藏，所以透明度都是0.
		1.4 为了能够点击到两侧按钮，所以按钮的层级必须大于辅助盒子的层级。
		1.5 视图盒子里面放6张图片，宽度是6张图片的宽度之和。所以会溢出父级，
			 因此父级"play"添加overflow:hidden;把超出的部分隐藏。
		1.6 父级"play"的宽度问题，这个宽度可以随意，但是应该满足下面的条件：
		    "play"的宽度 == 3张小视图的宽度 + 2个图片的间距，超出部分会被隐藏，
		    这也是为什么视图的盒子要大于其父级的原因（要容纳隐藏部分的空间）。
		    为了JS能够计算方便，视图间的距离不用"margin",采用填充的方式。
		    因为盒子的大小包括填充，但不包括外边距。
	
	2. 功能实现
		2.1 因为图片轮播会改变物体的样式，所以就将改变物体的样式写成 一个函数"StartChange"进行封装。
			 参数说明：obj(要改变哪个对象)，name(改变该对象的哪个属性)，target(要讲该对象的该属性值改变到多少).
			 这个运动采用缓冲的形式，即物体改变的速度是先快后慢。
		2.2 先获取需要的对象：
			2.2.1：大图盒子 
					 var bImgBox = document.getElementById('b_img');// 大图盒子
			2.2.2：大图里面的6张图片（结果是数组）
					 var bigImg = bImgBox.getElementsByTagName('img');
			2.2.3：大图两侧按钮
					 var leftBtn = bImgBox.getElementsByTagName('a')[0];
					 var rightBtn = bImgBox.getElementsByTagName('a')[1];
			2.2.4  两侧辅助盒子
					 var leftSize = bImgBox.getElementsByTagName('div')[0];
					 var rightSize = bImgBox.getElementsByTagName('div')[1];
			2.2.5：视图盒子
					 var smallImg = document.getElementById('s_img');
			2.2.6：视图盒子里面的6张小图片
					 var viewImg = smallImg.getElementsByTagName('img');
		2.3 实现两侧按钮的隐藏和显示
			2.3.1 当鼠标移入左辅助区域的时候，左侧按钮显示（透明度为100）；鼠标移出透明度为30.
			2.3.2 当鼠标移入右辅助区域的时候，右侧按钮显示（透明度为100），鼠标移出透明度为30.
			2.3.3 因为按钮的层级大于辅助区的层级，所以当鼠标移入按钮的时候，按钮会消失，
				   因此要给按钮添加鼠标移入事件，该事件函数等同于辅助区鼠标移入事件函数。
				   按钮移出事件就不用添加，因为按钮移出后，必定会触发辅助区鼠标移入事件。
		2.4 小视图鼠标移入、移出、点击事件
			2.4.1 给每个小图进行编号，方便以后定位。
			2.4.2 每个小图鼠标移入移出的时候，改变透明度（移入的时候高亮，移出变灰），
				   但是如果该小图是当前显示的图，鼠标移出就不改变透明度
			2.4.2 每个小图点击的时候，把原来高亮的图变成没高亮的，并把当前图片编号赋给当前层级，
				   不用为点击图片添加高亮，因为要点击必定会经过鼠标移入事件，
				   而鼠标移入事件已经有成为高亮功能。。
			2.4.3 小图点击的时候，把相应的大图层级加大，这样就会显示出来，然后把大图的高度设置为0，
				   然后大图的高度运动到原来的高度。
		2.5 大图切换
			2.5.1 在切换之前，把原来高亮的小图变为没高亮的，然后图片编号增加，如果编号到了边界，要及时处理，
				   避免移出，然后把相应的小图显示为高亮，并把相应的大图显示。
		2.6 视图滚动
			2.6.1 大图切换增加视图滚动代码。
			2.6.2 小视图点击增加视图滚动代码。
			2.6.3 视图滚动的原理是把视图盒子"s_img"进行移动，第1张和最后一张图片都不需要滚动，
			      剩下的小视图所移动的距离的都是(当前是第几张图片-1)*1个小视图的宽度，
			      但是这样有一个bug，当点击到最后一张后，再次点击不会滚动到第一张，
			      因此当是第一张图的时候，要移动0个距离，其实就是还原最初的状态。
		2.7 页面加载后就自动图片轮播
			2.7.1 添加定时器，执行右侧按钮点击事件。
			2.7.2 鼠标移入"play"盒子后，关闭定时器。